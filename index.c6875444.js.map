{"mappings":"AACA,IAAMA,OAASC,SAASC,cAAc,SAClCC,UAAYF,SAASC,cAAc,2BACnCE,WAAaH,SAASC,cAAc,wBACpCG,aAAeJ,SAASC,cAAc,6BAGpCI,UAAY,CACdC,SAAU,GACVC,MAAO,GACPC,QAAS,IAIPC,cAAgB,SAAAC,GACO,UAAtBA,EAAMC,OAAOC,KACZP,UAAUE,MAAQG,EAAMC,OAAOE,MACF,YAAtBH,EAAMC,OAAOC,KACpBP,UAAUG,QAAUE,EAAMC,OAAOE,MACJ,aAAtBH,EAAMC,OAAOC,OACpBP,UAAUC,SAAWI,EAAMC,OAAOE,OAEtCC,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUZ,W,EAIzDa,UAAYF,KAAKG,MAAML,aAAaM,QAAQ,wBAE9CF,YACAhB,UAAUW,MAAQK,UAAUZ,SAC9BH,WAAWU,MAAQK,UAAUX,MAC7BH,aAAaS,MAAQK,UAAUV,QAC/BH,UAAUE,MAAQW,UAAUX,MAC1BF,UAAUG,QAAUU,UAAUV,QAC9BH,UAAUC,SAAWY,UAAUZ,UAGnC,IAAMe,WAAa,SAACX,GAClBA,EAAMY,iBACN,IAA4DC,EAAZb,EAAMC,OAA/Ca,SAAYjB,EAAKgB,EAALhB,MAAOkB,EAAOF,EAAPf,QAASF,EAAQiB,EAARjB,SAEnC,GAAoB,KAAhBC,EAAMM,OAAkC,KAAlBY,EAAQZ,OAAmC,KAAnBP,EAASO,MACvD,OAAOa,MAAM,kCAGqDC,QAA9DC,IAAId,aAAaM,QAAQ,wBACjCN,aAAae,WAAW,uBACxBnB,EAAMoB,cAAcC,O,EAGtBhC,OAAOiC,iBAAiB,QAASvB,eACjCV,OAAOiC,iBAAiB,SAAUX,YA4BlC,IAAMY,MAAQ,iDACVC,YAAcC,MAAMC,SACpB5B,QAAW,QACfmB,QAAQC,IAAI,GAAWS,OAAR7B,UACf,IAAM8B,QAAU,CACdC,OAAQ,OACRC,KAAM,uBACNC,QAAS,CACPC,OAAQ,mBACR,aAAc,WACd,eAAgB,oBAElBC,KAAM3B,KAAKC,UAAU,CACnB2B,KAAM,GAAWP,OAAR7B,SACTqC,WAAY,OACZC,0BAA0B,EAC1BC,sBAAsB,EACtBC,oBAAqB,EACrBC,QAAS,GAAuBZ,OAApBH,YAAYe,YAG5BC,MAAM,+BAA4Db,OAA7BJ,MAAM,yBAA2CI,OAApBH,YAAYe,SAAWX,SACtFa,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAC,G,OAAYzB,QAAQC,IAAIwB,E,IAC7BE,OAAM,SAAAC,G,OAAO5B,QAAQ6B,MAAMD,E","sources":["src/js/form.js"],"sourcesContent":["// const throttle = require('lodash.throttle');\nconst onForm = document.querySelector('.form');\nlet inputName = document.querySelector('input[name =\"username\"]');\nlet inputEmail = document.querySelector('input[name =\"email\"]');\nlet inputMessage = document.querySelector('textarea[name =\"message\"]');\n\n\nconst formInput = {\n    username: \"\",\n    email: \"\",\n    message: \"\",\n};\n\n// Створюємо ф-ю, яка зберігає в локальне сховище нові властивості \"email\" і \"message\".\nconst changedOnForm = event => {\n    if(event.target.name === \"email\") {\n        formInput.email = event.target.value;\n    } else if (event.target.name === \"message\"){\n        formInput.message = event.target.value;\n    } else if (event.target.name === \"username\"){\n        formInput.username = event.target.value;\n    }\n    localStorage.setItem('feedback-form-state', JSON.stringify(formInput));\n}\n\n// Отримуємо дані з локального сховища\nconst fromLocal = JSON.parse(localStorage.getItem('feedback-form-state'));\n// Перевіряємо стан сховища і якщо там є дані, то заповнюємо ними форму\nif (fromLocal) {\n    inputName.value = fromLocal.username;\n  inputEmail.value = fromLocal.email;\n  inputMessage.value = fromLocal.message;\n  formInput.email = fromLocal.email;\n    formInput.message = fromLocal.message;\n    formInput.username = fromLocal.username;\n}\n\nconst submitForm = (event) => {\n  event.preventDefault();\n  const {elements: { email, message, username}} = event.target;\n\n  if (email.value === \"\" || message.value === \"\" || username.value === \"\") {\n      return alert(\"Please fill in all the fields!\");\n  }\n  // При натисканні кнопки submit виводимо дані зі сховища в консоль, очищаємо сховище та форму\n  console.log(localStorage.getItem('feedback-form-state'));\n  localStorage.removeItem('feedback-form-state');\n  event.currentTarget.reset();\n}\n\nonForm.addEventListener('input', changedOnForm);\nonForm.addEventListener(\"submit\", submitForm);\n\n\n\n\n// -----------------------------------\n// document.getElementById(\"myForm\").addEventListener(\"submit\", function(event) {\n//   event.preventDefault(); // Забороняємо формі відправлятись автоматично\n\n//   var formData = new FormData(this); // Отримуємо дані з форми\n//   var chatId = \"5187801485\"; // Замініть на ваш chatId, отриманий від Телеграму\n\n//   // Відправляємо POST-запит на API Телеграму\n//   fetch(`https://api.telegram.org/bot6444843684:AAHgazEpVJzBoNaJE6XRUbWy78z-U5jn3yE/sendMessage?chat_id=5187801485&text=Всім привіт!`, {\n//     method: \"POST\",\n//     body: formData\n//   })\n//   .then(response => response.json())\n//   .then(data => {\n//     console.log(data); // Результат відправки повідомлення в Телеграм\n//     // Додайте код для обробки успішної відправки повідомлення\n//   })\n//   .catch(error => {\n//     console.error(error); // Помилка відправки повідомлення в Телеграм\n//     // Додайте код для обробки помилки відправки повідомлення\n//   });\n// });\n\nconst token = '6444843684:AAHgazEpVJzBoNaJE6XRUbWy78z-U5jn3yE';\nlet inputConfig = input.config();\nlet message = `Hello`;\nconsole.log(`${message}`);\nconst options = {\n  method: 'POST',\n  Host: 'api.telegram.org:443',\n  headers: {\n    Accept: 'application/json',\n    'User-Agent': 'Airtable',\n    'Content-Type': 'application/json',    \n  },\n  body: JSON.stringify({\n    text: `${message}`,\n    parse_mode: 'HTML',\n    disable_web_page_preview: true,\n    disable_notification: true,\n    reply_to_message_id: 0,\n    chat_id: `${inputConfig.chat_id}`\n })\n};\nfetch(`https://api.telegram.org/bot${token}/sendMessage?chat_id=${inputConfig.chat_id}`, options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));"],"names":["onForm","document","querySelector","inputName","inputEmail","inputMessage","formInput","username","email","message","changedOnForm","event","target","name","value","localStorage","setItem","JSON","stringify","fromLocal","parse","getItem","submitForm","preventDefault","_elements","elements","message1","alert","console","log","removeItem","currentTarget","reset","addEventListener","token","inputConfig","input","config","concat","options","method","Host","headers","Accept","body","text","parse_mode","disable_web_page_preview","disable_notification","reply_to_message_id","chat_id","fetch","then","response","json","catch","err","error"],"version":3,"file":"index.c6875444.js.map"}